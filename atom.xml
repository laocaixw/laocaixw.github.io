<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>laocaixw</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://laocaixw.github.io/"/>
  <updated>2021-02-07T09:19:23.809Z</updated>
  <id>http://laocaixw.github.io/</id>
  
  <author>
    <name>laocaixw</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>设计模式学习系列（12）--享元模式</title>
    <link href="http://laocaixw.github.io/2018/09/15/Design_Mode_12_Flyweight/"/>
    <id>http://laocaixw.github.io/2018/09/15/Design_Mode_12_Flyweight/</id>
    <published>2018-09-14T16:00:00.000Z</published>
    <updated>2021-02-07T09:19:23.809Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;享元模式：&lt;strong&gt;使用共享对象可有效的支持大量的细粒度的对象&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://laocaixw.gitee.io/img/design_mode/12_Flyweight.jpg&quot;
        
      
    
    </summary>
    
    
      <category term="设计模式" scheme="http://laocaixw.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式学习系列（11）--外观模式</title>
    <link href="http://laocaixw.github.io/2018/08/12/Design_Mode_11_Facade/"/>
    <id>http://laocaixw.github.io/2018/08/12/Design_Mode_11_Facade/</id>
    <published>2018-08-11T16:00:00.000Z</published>
    <updated>2021-02-07T09:18:54.885Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;外观模式：&lt;strong&gt;要求一个子系统的外部与其内部的通信必须通过一个统一的对象进行。外观模式提供一个高层次的接口，使得子系统更易使用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img
        
      
    
    </summary>
    
    
      <category term="设计模式" scheme="http://laocaixw.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式学习系列（10）--桥梁模式</title>
    <link href="http://laocaixw.github.io/2018/07/14/Design_Mode_10_Bridge/"/>
    <id>http://laocaixw.github.io/2018/07/14/Design_Mode_10_Bridge/</id>
    <published>2018-07-13T16:00:00.000Z</published>
    <updated>2021-02-07T09:17:40.101Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;桥梁模式：&lt;strong&gt;将抽象和实现解耦，使得两者可以独立地变化。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://laocaixw.gitee.io/img/design_mode/10_Bridge.jpg&quot;
        
      
    
    </summary>
    
    
      <category term="设计模式" scheme="http://laocaixw.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式学习系列（9）--组合模式</title>
    <link href="http://laocaixw.github.io/2018/07/08/Design_Mode_9_Composite/"/>
    <id>http://laocaixw.github.io/2018/07/08/Design_Mode_9_Composite/</id>
    <published>2018-07-07T16:00:00.000Z</published>
    <updated>2021-02-07T09:17:30.619Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;组合模式：&lt;strong&gt;将对象组合成树形结构以表示“部分-整体”的层次结构，使得用户对单个对象和组合对象的使用具有一致性。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img
        
      
    
    </summary>
    
    
      <category term="设计模式" scheme="http://laocaixw.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Git删除历史记录中的大文件</title>
    <link href="http://laocaixw.github.io/2018/06/28/Git_filter_branch/"/>
    <id>http://laocaixw.github.io/2018/06/28/Git_filter_branch/</id>
    <published>2018-06-28T03:20:00.000Z</published>
    <updated>2018-06-28T06:04:15.295Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;Git 作为一个分布式的版本管理工具，代码仓库中是会保存所有历史记录的。虽然，Git 的 &lt;code&gt;.gitignore&lt;/code&gt;
        
      
    
    </summary>
    
    
      <category term="Git" scheme="http://laocaixw.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>设计模式学习系列（8）--适配器模式</title>
    <link href="http://laocaixw.github.io/2018/06/16/Design_Mode_8_Adapter/"/>
    <id>http://laocaixw.github.io/2018/06/16/Design_Mode_8_Adapter/</id>
    <published>2018-06-15T16:00:00.000Z</published>
    <updated>2021-02-07T09:17:14.631Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;适配器模式：&lt;strong&gt;将一个类的接口变换成客户端所需要的另一种接口，从而使原本因接口不匹配而无法一起工作的两个类能够在一起工作&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img
        
      
    
    </summary>
    
    
      <category term="设计模式" scheme="http://laocaixw.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Android与Vue的交互</title>
    <link href="http://laocaixw.github.io/2018/05/17/Android_WebView_Vue/"/>
    <id>http://laocaixw.github.io/2018/05/17/Android_WebView_Vue/</id>
    <published>2018-05-17T10:00:00.000Z</published>
    <updated>2018-05-25T05:59:17.862Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;做过 Android 混合开发的，应该都知道 Android 中 Java 代码和 Javascript 代码之间的交互怎么做。&lt;/p&gt;
&lt;p&gt;首先回顾一下 Java 和 Javascript 之间的交互。&lt;/p&gt;
&lt;h3
        
      
    
    </summary>
    
    
      <category term="Android" scheme="http://laocaixw.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Java中的四种引用</title>
    <link href="http://laocaixw.github.io/2018/05/09/Java_Reference/"/>
    <id>http://laocaixw.github.io/2018/05/09/Java_Reference/</id>
    <published>2018-05-09T02:00:00.000Z</published>
    <updated>2018-05-10T06:38:38.342Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Java 中有四种引用：强引用、软引用、弱引用、虚引用。引用的存在，就是为了让开发者可以更好地管理内存。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="http://laocaixw.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>用Jenkins自动部署hexo搭建的GitHub静态博客</title>
    <link href="http://laocaixw.github.io/2018/04/02/Blog_Hexo_GitHub_Jenkins/"/>
    <id>http://laocaixw.github.io/2018/04/02/Blog_Hexo_GitHub_Jenkins/</id>
    <published>2018-04-02T05:30:00.000Z</published>
    <updated>2018-04-06T06:39:59.083Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;hexo 为我们提供了一套非常方便的静态博客搭建框架，我们只需要编写文章的 MarkDown 文件即可。但是即便方便，还是会有几个繁琐的步骤：每次写一篇博客都需要执行编译命令，再将新生成的网页代码提交到 GitHub；而且，如果博客是由团队成员共同贡献，很难做到协同维护。使用 Jenkins 可以帮我们一定程度上解决这两个问题。&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://laocaixw.github.io/tags/hexo/"/>
    
      <category term="Jenkins" scheme="http://laocaixw.github.io/tags/Jenkins/"/>
    
  </entry>
  
  <entry>
    <title>设计模式学习系列（7）--装饰模式</title>
    <link href="http://laocaixw.github.io/2018/01/07/Design_Mode_7_Decorator/"/>
    <id>http://laocaixw.github.io/2018/01/07/Design_Mode_7_Decorator/</id>
    <published>2018-01-06T16:00:00.000Z</published>
    <updated>2021-02-07T09:17:03.878Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;装饰模式：&lt;strong&gt;动态地给一个对象添加一些额外的职责。就增加功能来说，装饰模式比生成子类更为灵活。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img
        
      
    
    </summary>
    
    
      <category term="设计模式" scheme="http://laocaixw.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>2017年总结</title>
    <link href="http://laocaixw.github.io/2017/12/30/Summary_2017/"/>
    <id>http://laocaixw.github.io/2017/12/30/Summary_2017/</id>
    <published>2017-12-30T02:30:00.000Z</published>
    <updated>2018-01-09T12:09:35.814Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;突然发现时间过得好快，2017 年马上就过去了。这也是自己转行做 IT 后第一次写总结，以前都是老师或者领导布置任务，属于被写总结。从去年六月份从国企辞职，到现在也有一年半的时间了，就对自己这一点半做一个总结吧。&lt;/p&gt;
&lt;p&gt;参加工作一年左右开始有了转行做 IT
        
      
    
    </summary>
    
    
      <category term="总结" scheme="http://laocaixw.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>设计模式学习系列（6）--代理模式</title>
    <link href="http://laocaixw.github.io/2017/12/23/Design_Mode_6_Proxy/"/>
    <id>http://laocaixw.github.io/2017/12/23/Design_Mode_6_Proxy/</id>
    <published>2017-12-23T02:30:00.000Z</published>
    <updated>2021-02-07T09:16:52.773Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;代理模式：&lt;strong&gt;为其他对象提供一种代理以控制对这个对象的访问。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://laocaixw.gitee.io/img/design_mode/6_Proxy.jpg&quot;
        
      
    
    </summary>
    
    
      <category term="设计模式" scheme="http://laocaixw.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式学习系列（5）--原型模式</title>
    <link href="http://laocaixw.github.io/2017/11/24/Design_Mode_5_Prototype/"/>
    <id>http://laocaixw.github.io/2017/11/24/Design_Mode_5_Prototype/</id>
    <published>2017-11-23T16:00:00.000Z</published>
    <updated>2021-02-07T09:16:40.772Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;原型模式：&lt;strong&gt;用原型实例指定创建对象的种类，并且通过复制这些原型创建新的对象。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://laocaixw.gitee.io/img/design_mode/5_Prototype.jpg&quot;
        
      
    
    </summary>
    
    
      <category term="设计模式" scheme="http://laocaixw.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Proguard混淆配置</title>
    <link href="http://laocaixw.github.io/2017/09/26/Android_Proguard/"/>
    <id>http://laocaixw.github.io/2017/09/26/Android_Proguard/</id>
    <published>2017-09-26T02:00:00.000Z</published>
    <updated>2017-11-16T13:50:25.827Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;1-基本配置&quot;&gt;&lt;a href=&quot;#1-基本配置&quot; class=&quot;headerlink&quot; title=&quot;1. 基本配置&quot;&gt;&lt;/a&gt;1. 基本配置&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td
        
      
    
    </summary>
    
    
      <category term="Android" scheme="http://laocaixw.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android中WebView的配置和填坑记录</title>
    <link href="http://laocaixw.github.io/2017/09/25/Android_WebView_Config_Record/"/>
    <id>http://laocaixw.github.io/2017/09/25/Android_WebView_Config_Record/</id>
    <published>2017-09-25T02:00:00.000Z</published>
    <updated>2018-04-04T08:22:32.684Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;持续更新中&lt;/p&gt;
&lt;h2 id=&quot;1-一些基本配置&quot;&gt;&lt;a href=&quot;#1-一些基本配置&quot; class=&quot;headerlink&quot; title=&quot;1. 一些基本配置&quot;&gt;&lt;/a&gt;1. 一些基本配置&lt;/h2&gt;&lt;figure class=&quot;highlight
        
      
    
    </summary>
    
    
      <category term="Android" scheme="http://laocaixw.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>网站服务器搭建相关</title>
    <link href="http://laocaixw.github.io/2017/09/05/Web_Server_Setup/"/>
    <id>http://laocaixw.github.io/2017/09/05/Web_Server_Setup/</id>
    <published>2017-09-05T13:30:00.000Z</published>
    <updated>2018-05-25T07:47:36.556Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;以下内容基于此系统版本：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span
        
      
    
    </summary>
    
    
      <category term="Web" scheme="http://laocaixw.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Sublime Text 3 插件及快捷键</title>
    <link href="http://laocaixw.github.io/2017/08/27/Sublime_Text_3_Plugin_Key/"/>
    <id>http://laocaixw.github.io/2017/08/27/Sublime_Text_3_Plugin_Key/</id>
    <published>2017-08-27T13:30:00.000Z</published>
    <updated>2017-11-24T06:22:24.319Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;快捷键大全&quot;&gt;&lt;a href=&quot;#快捷键大全&quot; class=&quot;headerlink&quot; title=&quot;快捷键大全&quot;&gt;&lt;/a&gt;快捷键大全&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.douban.com/note/362268947/&quot;
        
      
    
    </summary>
    
    
      <category term="工具" scheme="http://laocaixw.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Git命令</title>
    <link href="http://laocaixw.github.io/2017/08/17/Git_Bash/"/>
    <id>http://laocaixw.github.io/2017/08/17/Git_Bash/</id>
    <published>2017-08-17T03:00:00.000Z</published>
    <updated>2018-09-30T01:28:06.762Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;Git 的一些命令&lt;/p&gt;
&lt;h3 id=&quot;git-init&quot;&gt;&lt;a href=&quot;#git-init&quot; class=&quot;headerlink&quot; title=&quot;git init&quot;&gt;&lt;/a&gt;git init&lt;/h3&gt;&lt;p&gt;将当前目录初始化为一个 git 仓库。&lt;/p&gt;
&lt;h3
        
      
    
    </summary>
    
    
      <category term="Git" scheme="http://laocaixw.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>设计模式学习系列（4）--建造者模式</title>
    <link href="http://laocaixw.github.io/2017/08/11/Design_Mode_4_Builder/"/>
    <id>http://laocaixw.github.io/2017/08/11/Design_Mode_4_Builder/</id>
    <published>2017-08-10T16:00:00.000Z</published>
    <updated>2021-02-07T09:16:27.697Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;建造者模式：&lt;strong&gt;将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://laocaixw.gitee.io/img/design_mode/4_Builder.jpg&quot;
        
      
    
    </summary>
    
    
      <category term="设计模式" scheme="http://laocaixw.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Android耗电分析</title>
    <link href="http://laocaixw.github.io/2017/08/08/Android_Battery_Analysis/"/>
    <id>http://laocaixw.github.io/2017/08/08/Android_Battery_Analysis/</id>
    <published>2017-08-08T02:30:00.000Z</published>
    <updated>2018-04-04T07:53:13.099Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;Battery-Historian-3&quot;&gt;&lt;a href=&quot;#Battery-Historian-3&quot; class=&quot;headerlink&quot; title=&quot;Battery Historian 3&quot;&gt;&lt;/a&gt;Battery Historian
        
      
    
    </summary>
    
    
      <category term="Android" scheme="http://laocaixw.github.io/tags/Android/"/>
    
  </entry>
  
</feed>
